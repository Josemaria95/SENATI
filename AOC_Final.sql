-- USE THE DATABASE NEW_SENATI AND UPDATE THE TABLES
USE Planeamiento
DROP TABLE AOC_TABLA
DROP TABLE #AOC_TEST
DROP TABLE #temporal
GO
-- CREATE THE VIEW AOC_TEST, THIS TABLE HAS DIFFERENT CONDITIONS OF PROCESS FLOW
--CREATE VIEW AOC_TEST AS
SELECT DISTINCT aoc.FONDO AS FONDO,
	   aoc.REQ_BIEN AS REQ_BIEN,
	   aoc.REQ_OC AS REQ_OC,
	   aoc.ORDEN AS ORDEN,
	   aoc.TIPO_ORDEN AS TIPO_ORDEN,
	   CONVERT (DATE, aoc.FECHA_ORDEN,103) AS FECHA_ORDEN, -- CONVERT STRING TO DATE
	   CONVERT (DATE, aoc.FECHA_DE_ENTREGA,103) AS FECHA_ENTREGA, -- CONVERT STRING TO DATE
	   aoc.ESTADO AS ESTADO,
	   aoc.CIERRE_BIEN AS CIERRE_BIEN,
	   aoc.CIERRE_COMPROMISO AS CIERRE_COMPROMISO,
	   --aoc.PROVEEDOR AS PROVEEDOR,
	   RIGHT(aoc.PROVEEDOR, IIF(CAST(LEN(aoc.PROVEEDOR) AS int)=0,0,CAST(LEN(aoc.PROVEEDOR) AS int)-12)) AS PROVEEDOR ,
	   aoc.COMPRADOR AS COMPRADOR,
	   aoc.FECHA_APROBACION AS FECHA_APROBACION,
	   aoc.NOMBRE_APROBADOR AS NOMBRE_APROBADOR,
	   aoc.ITEM AS ITEM,
	   aoc.COMM AS COMM,
	   aoc.BIEN AS BIEN,
	   aoc.UND AS UND,
	   CAST (aoc.CANT_ORDEN AS float) AS CANT_ORDEN, -- CONVERT STRING TO FLOAT
	   CAST(ISNULL (CANT_RCVD,0)AS float) AS CANT_RCVD, -- CANT_RCVD CONDITION FOR NULL's
	   CAST (prop.P_UNITARIO AS float) AS P_UNITARIO, -- CONVERT STRING TO FLOAT
	   CAST(aoc.IMPORTE_BIEN AS float) AS IMPORTE_BIEN,
	   aoc.FUND AS FUND,
	   aoc.ORGN AS ORGN,
	   aoc.ACCT AS ACCT,
	   aoc.PROG AS PROG,
	   aoc.PRIM_RECEPCION AS PRIM_RECEPCION,
	   aoc.ULT_RECEPCION AS ULT_RECEPCION,
	   aoc.CHEQUE AS CHEQUE,
	   aoc.FACTURA AS FACTURA,
	   aoc.DESCUENTO AS DESCUENTO,
	   aoc.TEXTO AS TEXTO,
	   aoc.SOLICITANTE AS SOLICITANTE,
	   aoc.COD_LAB AS COD_LAB,
	   aoc.RUC_PROVEEDOR AS RUC_PROVEEDOR,
	   aoc.GRUPO_IMP AS GRUPO_IMP,
	   --prop.TIPO_CAT_FINAL AS TIPO_CAT_FINAL,
	   prop.TIPO_CATEGORIA AS TIPO_CAT_FINAL,
	   --CASE WHEN prop.TIPO_CAT_FINAL IS NULL THEN 'CORP' ELSE TIPO_CAT_FINAL END AS TIPO_CAT_FINAL, -- TIPO_CAT_FINAL CONDITION FOR NULL's
	   --prop.PUNIT_ADJ AS PUNIT_ADJ,
	   prop.COD_PRED_FINAL AS COD_PRED,
	   --CASE WHEN prop.COD_PRED IS NULL THEN 'GL201840' ELSE COD_PRED END AS COD_PRED, -- COD_PRED CONDITION FOR NULL's
	   prop.BIEN_PREDESEDOR2 AS BIEN_PREDESEDOR,
	   --CAST (CASE WHEN prop.BIEN_PREDESEDOR IS NULL THEN 'ROPA D/TRABAJO' -- CONVERT STRING (14) TO STRING(255)
	   --ELSE BIEN_PREDESEDOR END AS nvarchar(255)) AS BIEN_PREDESEDOR, -- BIEN_PREDESEDOR CONDITION FOR NULL's
	   prop.COD_BIEN AS COD_BIEN,
	   MONTO_VCP = P_UNITARIO * CANT_ORDEN, -- ADD COLUMN MONTO_VCP FROM MULTIPLICATION

	   --*********** ADD NEW COLUMNS ******************************
	   CAST(ISNULL (IIF(CIERRE_BIEN = 'Y', CANT_RCVD, CANT_ORDEN),0) AS float) AS CANT_ORDEN2, -- CONDITION FOR COLUMN CANT_ORDEN2
	   CAST(ISNULL (IMPORTE_BIEN/NULLIF(CANT_ORDEN,0) * IIF( CIERRE_BIEN = 'Y', CANT_RCVD, CANT_ORDEN),0)AS FLOAT) AS IMPORTE_BIEN2, -- CONDITION FOR COLUMN IMPORTE_BIEN2
	   CAST(ISNULL (CANT_RCVD,0) AS FLOAT) AS CANT_RCVD2, -- CONDITION FOR COLUMN CANT_RCVD2


	   CAST (ISNULL(ISNULL(IMPORTE_BIEN/NULLIF(CANT_ORDEN,0) * IIF( CIERRE_BIEN = 'Y', CANT_RCVD, CANT_ORDEN),0)/NULLIF(ISNULL (
	   IIF(CIERRE_BIEN = 'Y', CANT_RCVD, CANT_ORDEN),0),0) * ISNULL (CANT_RCVD,0),0)AS FLOAT) AS IMPORTE_RCVD2, -- CONDITION FOR COLUMN IMPORTE_RCVD2
	   
	   CAST (IIF (ISNULL (CANT_RCVD,0) >= ISNULL (IIF(CIERRE_BIEN = 'Y', CANT_RCVD, CANT_ORDEN),0), 'COMPLETA', 
	   IIF(ISNULL (CANT_RCVD,0) = 0, 'PENDIENTE', 'PARCIAL')) AS nvarchar(255)) AS CONDICION_LINEA  -- CONDITION FOR COLUMN CONDICION_LINEA

INTO #AOC_TEST
FROM AOC_TMP AS aoc
LEFT JOIN PROP_TMP AS prop ON prop.COD_BIEN = CAST(aoc.COMM AS nvarchar(255)) -- LEFT JOIN BETWEEN ORDEN DE COMPRA TABLE AND PROPIEDADES TABLE

-- FILTERS ESTADO, TIPO_ORDEN AND FECHA_ORDEN
 WHERE ESTADO LIKE 'AP%' 
 AND ((TIPO_ORDEN = 'P - O/C PLAN ANUAL' AND YEAR(CONVERT (DATE, aoc.FECHA_ORDEN,103)) = 2020)
 OR (TIPO_ORDEN = 'T - O/C PLAN ANUAL - ADELANTO' AND YEAR(CONVERT (DATE, aoc.FECHA_ORDEN,103)) = 2019))

GO

-- CREATE A TEMPORARY TABLE WITH ONE CONDITION TO KNOW IF THE ROWS FROM AOC_TABLE IS COMPLETE 
SELECT	ORDEN AS TMP_ORDEN, 
		--SUM(CANT_ORDEN2) AS TOT_CANT_ORDEN2,
		--SUM(CANT_RCVD2) AS TOT_CANT_RCVD2, 
		--SUM(IMPORTE_BIEN2) AS TOT_IMP_BIEN2, 
		--SUM(IMPORTE_RCVD2) AS TOT_IMP_RCVD2,
		CAST (IIF (SUM(CANT_RCVD2) >= SUM(CANT_ORDEN2), 'COMPLETO', IIF(SUM(CANT_RCVD2) = 0, 'PENDIENTE', 'PARCIAL')) AS NVARCHAR(255)) AS CONDICION_PO -- CONDITION 
INTO #temporal
FROM #AOC_TEST
GROUP BY ORDEN -- TABLE GROUP BY THE ORDEN COLUMN
GO

-- JOIN BETWEEN THE VIEW AND TEMPORARY TABLE / FINAL TABLE 
SELECT * 
INTO AOC_TABLA 
FROM #AOC_TEST
LEFT JOIN #temporal AS tmp ON tmp.TMP_ORDEN = #AOC_TEST.ORDEN
ALTER TABLE AOC_TABLA DROP COLUMN TMP_ORDEN
GO

--SELECT DISTINCT FONDO, ORDEN, COMM, BIEN_PREDESEDOR FROM AOC_TABLA WHERE BIEN_PREDESEDOR = 'REPUESTOS DE MAQUINARIA Y EQUIPO'

--SELECT * FROM AOC_TABLA WHERE ORDEN = 'P0217358' AND COMM = '76220016'